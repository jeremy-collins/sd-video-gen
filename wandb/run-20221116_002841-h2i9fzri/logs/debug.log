2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_setup.py:_flush():68] Configure stats pid to 183549
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_setup.py:_flush():68] Loading settings from /nethome/jcollins90/.config/wandb/settings
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_setup.py:_flush():68] Loading settings from /home/jcollins90/sd-video-gen/wandb/settings
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True', 'project': 'sd_video_gen_11_15', 'entity': 'jeremy-collins', 'root_dir': '/home/jcollins90/sd-video-gen', 'sweep_id': 'yvtml7e5', 'run_id': 'h2i9fzri', 'sweep_param_path': '/home/jcollins90/sd-video-gen/wandb/sweep-yvtml7e5/config-h2i9fzri.yaml'}
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'trainer.py', 'program': '/home/jcollins90/sd-video-gen/trainer.py'}
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_init.py:_log_setup():476] Logging user logs to /home/jcollins90/sd-video-gen/wandb/run-20221116_002841-h2i9fzri/logs/debug.log
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_init.py:_log_setup():477] Logging internal logs to /home/jcollins90/sd-video-gen/wandb/run-20221116_002841-h2i9fzri/logs/debug-internal.log
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():516] calling init triggers
2022-11-16 00:28:41,138 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():519] wandb.init called with sweep_config: {'batch_size': 32, 'dim_model': 256, 'dropout_p': 0.1, 'epoch_ratio': 1, 'epochs': 10, 'frames_per_clip': 5, 'frames_to_predict': 5, 'lambda_gdl': 1, 'lr': 0.0001, 'num_decoder_layers': 6, 'num_encoder_layers': 6, 'num_heads': 8, 'num_workers': 12, 'stride': 1, 'use_gdl': True, 'use_mse': True}
config: {'_name': 'wandb.config', '__doc__': '\n    Config object\n\n    Config objects are intended to hold all of the hyperparameters associated with\n    a wandb run and are saved with the run object when `wandb.init` is called.\n\n    We recommend setting `wandb.config` once at the top of your training experiment or\n    setting the config as a parameter to init, ie. `wandb.init(config=my_config_dict)`\n\n    You can create a file called `config-defaults.yaml`, and it will automatically be\n    loaded into `wandb.config`. See https://docs.wandb.com/library/config#file-based-configs.\n\n    You can also load a config YAML file with your custom name and pass the filename\n    into `wandb.init(config="special_config.yaml")`.\n    See https://docs.wandb.com/library/config#file-based-configs.\n\n    Examples:\n        Basic usage\n        ```python\n        wandb.config.epochs = 4\n        wandb.init()\n        for x in range(wandb.config.epochs):\n            # train\n        ```\n\n        Using wandb.init to set config\n        ```python\n        wandb.init(config={"epochs": 4, "batch_size": 32})\n        for x in range(wandb.config.epochs):\n            # train\n        ```\n\n        Nested configs\n        ```python\n        wandb.config[\'train\'][\'epochs\'] = 4\n        wandb.init()\n        for x in range(wandb.config[\'train\'][\'epochs\']):\n            # train\n        ```\n\n        Using absl flags\n        ```python\n        flags.DEFINE_string(‘model’, None, ‘model to run’) # name, default, help\n        wandb.config.update(flags.FLAGS) # adds all absl flags to config\n        ```\n\n        Argparse flags\n        ```python\n        wandb.init()\n        wandb.config.epochs = 4\n\n        parser = argparse.ArgumentParser()\n        parser.add_argument(\'-b\', \'--batch-size\', type=int, default=8, metavar=\'N\',\n                            help=\'input batch size for training (default: 8)\')\n        args = parser.parse_args()\n        wandb.config.update(args)\n        ```\n\n        Using TensorFlow flags (deprecated in tensorflow v2)\n        ```python\n        flags = tf.app.flags\n        flags.DEFINE_string(\'data_dir\', \'/tmp/data\')\n        flags.DEFINE_integer(\'batch_size\', 128, \'Batch size.\')\n        wandb.config.update(flags.FLAGS)  # adds all of the tensorflow flags to config\n        ```\n    '}
2022-11-16 00:28:41,139 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():569] starting backend
2022-11-16 00:28:41,139 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():573] setting up manager
2022-11-16 00:28:41,144 INFO    Thread-2 (_run_job):183549 [backend.py:_multiprocessing_setup():102] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2022-11-16 00:28:41,146 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():580] backend started and connected
2022-11-16 00:28:41,150 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_config_callback():1160] config_cb None None {'batch_size': 32, 'dim_model': 256, 'dropout_p': 0.1, 'epoch_ratio': 1, 'epochs': 10, 'frames_per_clip': 5, 'frames_to_predict': 5, 'lambda_gdl': 1, 'lr': 0.0001, 'num_decoder_layers': 6, 'num_encoder_layers': 6, 'num_heads': 8, 'num_workers': 12, 'stride': 1, 'use_gdl': True, 'use_mse': True}
2022-11-16 00:28:41,150 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():658] updated telemetry
2022-11-16 00:28:41,154 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():693] communicating run to backend with 60 second timeout
2022-11-16 00:28:41,313 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_on_init():2000] communicating current version
2022-11-16 00:28:41,398 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_on_init():2004] got version response 
2022-11-16 00:28:41,398 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():728] starting run threads in backend
2022-11-16 00:28:43,578 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_console_start():1980] atexit reg
2022-11-16 00:28:43,578 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_redirect():1838] redirect: SettingsConsole.WRAP_RAW
2022-11-16 00:28:43,579 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_redirect():1903] Wrapping output streams.
2022-11-16 00:28:43,579 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_redirect():1925] Redirects installed.
2022-11-16 00:28:43,579 INFO    Thread-2 (_run_job):183549 [wandb_init.py:init():765] run started, returning control to user process
2022-11-16 00:28:53,098 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_finish():1746] finishing run jeremy-collins/sd_video_gen_11_15/h2i9fzri
2022-11-16 00:28:53,098 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_atexit_cleanup():1949] got exitcode: 1
2022-11-16 00:28:53,098 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_restore():1932] restore
2022-11-16 00:28:53,098 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_restore():1938] restore done
2022-11-16 00:28:57,306 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_footer_history_summary_info():3377] rendering history
2022-11-16 00:28:57,306 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_footer_history_summary_info():3409] rendering summary
2022-11-16 00:28:57,308 INFO    Thread-2 (_run_job):183549 [wandb_run.py:_footer_sync_info():3333] logging synced files
